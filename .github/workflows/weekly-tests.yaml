# This workflow runs all the Weekly tests.

name: Weekly Tests

on:
  # Runs every Sunday from 7AM UTC.
  schedule:
  - cron: 00 7 * * 6
  # Allows us to manually start workflow for testing.
  workflow_dispatch:

jobs:
  gpu-tests:
    runs-on: [self-hosted, linux, x64]
    container: ghcr.io/gem5/gcn-gpu:latest
    timeout-minutes: 300

    steps:
    - uses: actions/checkout@v4
      with:
        ref: develop
    - name: Build VEGA_X86/gem5.opt
      run: scons build/VEGA_X86/gem5.opt -j`nproc`

    - name: Run Testlib GPU Tests
      working-directory: ${{ github.workspace }}/tests
      run: ./main.py run --length=very-long --skip-build -vvv -t $(nproc) --host
        gcn_gpu

    - name: Upload results
      if: success() || failure()
      uses: actions/upload-artifact@v4.0.0
      with:
        name: |
          gpu_COMMIT.${{github.sha}}_RUN.${{github.run_id}}_ATTEMPT.${{github.run_attempt}}
        path: tests/testing-results

  build-gem5:
    runs-on: [self-hosted, linux, x64]
    container: ghcr.io/gem5/ubuntu-24.04_all-dependencies:latest
    outputs:
      build-name: ${{ steps.artifact-name.outputs.name }}
    steps:
    - uses: actions/checkout@v4
      with:
         # Scheduled workflows run on the default branch by default. We
         # therefore need to explicitly checkout the develop branch.
        ref: develop

    - id: artifact-name
      run: |
        echo "name=weekly-${{github.sha}}_run-${{github.run_id}}-build-ALL"
        >> $GITHUB_OUTPUT

    - name: Build gem5
      run: scons build/ALL/gem5.opt -j $(nproc)

    - uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.artifact-name.outputs.name }}
        path: build/ALL/gem5.opt

  # start running the very-long tests
  testlib-very-long-tests:
    strategy:
      fail-fast: false
      matrix:
        test-type: ${{ fromJson("$(find tests/gem5/* -type d -maxdepth 0 | jq -ncR
          '[inputs]')")}}


    runs-on: [self-hosted, linux, x64]
    container: ghcr.io/gem5/ubuntu-24.04_all-dependencies:latest
    needs: build-gem5
    timeout-minutes: 4320 # 3 days
    steps:
    - uses: actions/checkout@v4
      with:
        # Scheduled workflows run on the default branch by default. We
        # therefore need to explicitly checkout the develop branch.
        ref: develop
    - uses: actions/download-artifact@v4
      with:
        name: ${{needs.build-gem5.outputs.build-name}}
        path: build/ALL
    - run: chmod u+x build/ALL/gem5.opt
    - name: Very :ong ${{ matrix.test-type }}
      working-directory: ${{ github.workspace }}/tests
      run: |
        ./main.py run gem5/${{ matrix.test-type }} --length very-long \
          --skip-build -vvv

    - name: upload results
      if: success() || failure()
      uses: actions/upload-artifact@v4
      with:
        name: |
          weekly-${{ matrix.test-type }}_commit-${{github.sha}}_run-\
          ${{github.run_id}}_attempt-${{github.run_attempt}}
        path: tests/testing-results

  dramsys-tests:
    runs-on: [self-hosted, linux, x64]
    container: ghcr.io/gem5/ubuntu-22.04_all-dependencies:latest
    timeout-minutes: 4320  # 3 days
    steps:
    - uses: actions/checkout@v4
      with:
        # Scheduled workflows run on the default branch by default. We
        # therefore need to explicitly checkout the develop branch.
        ref: develop

    - name: Checkout DRAMSys
      working-directory: ${{ github.workspace }}/ext/dramsys
      run: |
        git clone https://github.com/tukl-msd/DRAMSys \
          --branch v5.0 --depth 1 DRAMSys

      # gem5 is built separately because it depends on the DRAMSys library
    - name: Build gem5
      working-directory: ${{ github.workspace }}
      run: scons build/ALL/gem5.opt -j $(nproc)

    - name: DRAMSys Check - arm-hello-dramsys
      run: |
        ./build/ALL/gem5.opt \
        configs/example/gem5_library/dramsys/arm-hello-dramsys.py

    - name: DRAMSys Check - dramsys-traffic
      run: |
        ./build/ALL/gem5.opt \
        configs/example/gem5_library/dramsys/dramsys-traffic.py

    - name: DRAMSys Check - example/dramsys
      run: /build/ALL/gem5.opt configs/example/dramsys.py

  weekly-tests:
    # The dummy job is used to indicate whether the weekly tests have
    # passed or not. This can be used as status check for pull requests.
    # I.e., if we want to stop pull requests from being merged if the
    # weekly tests are failing we can add this job as a required status
    # check.
    runs-on: ubuntu-latest
    needs:
    - testlib-very-long-tests
    - dramsys-tests
    - gpu-tests
    steps:
    - run: echo "The Weekly tests have passed."
