Instructions for downloading, compiling and running gem5 (BJUT/NUMA version).

1. Make sure you are running Ubuntu 15.04 (64 bit) or higher, and up-to-date.
sudo apt-get update; sudo apt-get dist-upgrade

2. Install the following essential packages:
sudo apt-get install git mercurial scons build-essential swig python-dev python-pip python-lxml python-pydot zlib1g-dev libgoogle-perftools-dev protobuf-compiler libprotobuf-dev m4
pip install objectpath yattag pytz pygal cairosvg tinycss cssselect

3. Checkout gem5:
git clone https://github.com/mcai/gem5

4. Build gem5:
cd gem5/;./compile_ALPHA.sh

5. Download disk images and Linux kernel files as required for full-system ALPHA simulation in gem5:
    a) Full System Files: http://www.m5sim.org/dist/current/m5_system_2.0b3.tar.bz2
    b) linux-dist: http://www.m5sim.org/dist/current/linux-dist.tgz
    Extract these files and put them in /home/<current_user>/Tools/GEM5/system/.

    The prepared directory layout should look like:
    .
    ├── binaries
    │   ├── console
    │   ├── tsb_osfpal
    │   ├── vmlinux
    │   ├── vmlinux-22-22-64
    │   ├── vmlinux_2.6.27-gcc_4.3.4
    │   ├── x86_64-vmlinux-2.6.22.9
    │   └── x86_64-vmlinux-2.6.22.9.smp
    ├── configs
    │   ├── linux-2.6.22.9
    │   ├── linux-2.6.22.9.smp
    │   ├── linux-2.6.25.1
    │   └── linux-2.6.28.4
    └── disks
       ├── BigDataBench-gem5.img
       ├── linux-bigswap2.img
       ├── linux-parsec-2-1-m5-with-test-inputs.img
       ├── linux-x86.img
       └── x86root-parsec.img

6. Run gem5:
    a) For running multi-core experiments:
    ./run_all_experiments_ALPHA.py
    Experiment results will be put in results/alpha/.

    b) For running CC-NUMA multi-core experiments:
    ./run_all_experiments_ALPHA_no_checkpoints.py
    Experiment results will be put in results/alpha_ccnuma_no_checkpoints/.

** Notes:
    For any questions, please contact us via email: min.cai.china@bjut.edu.cn.
